name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: npm
          cache-dependency-path: 'src/*/package-lock.json'
      - name: Build and Test
        run: PARALLEL_BUILD=false PARALLEL_E2E=false E2E_LAUNCH_DELAY=5 EXPLICIT_WAIT_TIMEOUT=20000 TEST_TIMEOUT=60000 npm test
      - name: Bundle
        run: |
          cd build
          rm -r node_modules
          tar -czf ../build.tar.gz .
      - name: Upload Bundle
        uses: actions/upload-artifact@v2
        with:
          name: refacto
          retention-days: 1
          if-no-files-found: error
          path: build.tar.gz

  smoke_test:
    needs:
      - build_and_test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { node: '14' }
          - { node: '16' }
    steps:
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Download Bundle
        uses: actions/download-artifact@v2
        with:
          name: refacto
      - name: Unpack
        run: |
          tar -xf build.tar.gz
          rm build.tar.gz
      - name: Smoke Test
        run: |
          npm install --production
          ./index.js > stdout.log & PID=$!
          sleep 5
          if ! grep 'Available at' <stdout.log >/dev/null; then
            cat stdout.log
            echo "Application failed to launch" >&2
            exit 1
          fi

          wget localhost:5000 -O test-index.html
          if ! grep 'src="/assets/' <test-index.html >/dev/null; then
            cat stdout.log
            echo "Unexpected main page response" >&2
            cat test-index.html
            exit 1
          fi;

          kill -2 "$PID"
          sleep 5
          if ! grep 'Shutdown complete' <stdout.log >/dev/null; then
            cat stdout.log
            echo "Application failed to shut down" >&2
            exit 1
          fi

  create_release:
    needs:
      - smoke_test
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' && github.head_ref == null }}
    permissions:
      contents: write
    steps:
      - name: Download Bundle
        uses: actions/download-artifact@v2
        with:
          name: refacto
      - name: Create Release
        env:
          API_BASE: 'https://api.github.com/repos/${{ github.repository }}'
          COMMIT: ${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NAME=$(date -u '+%Y%m%d-%H%M%S')
          echo "Creating release $NAME..."
          wget -S \
            --header='Accept: application/vnd.github.v3+json' \
            --header="Authorization: token $GITHUB_TOKEN" \
            --post-data="$(jq -n --arg n "$NAME" --arg c "$COMMIT" '{tag_name: $n, target_commitish: $c}')" \
            "$API_BASE/releases" -O release.json
          cat release.json
          echo "Uploading bundle..."
          UPLOAD_URL=$(jq -r '.upload_url' <release.json | sed 's/{[^}]*}//')
          wget -S \
            --header='Accept: application/vnd.github.v3+json' \
            --header="Authorization: token $GITHUB_TOKEN" \
            --header='Content-Type: application/gzip' \
            --post-file='build.tar.gz' \
            "$UPLOAD_URL" -O release-file.json
          cat release-file.json
          echo "Done."
